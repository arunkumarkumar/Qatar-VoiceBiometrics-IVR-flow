/**
 * Last generated by Orchestration Designer at: 2020-DEC-30  09:30:19 PM
 */
package english.prompts;
import java.util.HashMap;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession; 
import com.util.GetStackTrace;
import com.util.GlobalConstant;

import flow.IProjectVariables;

public class playNINM extends com.avaya.sce.runtime.Prompt {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Constructor for playNINM.
	 */
	public playNINM() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	@Override
	public void updatePrompt(SCESession mySession) {

			try
			{
			int retryCount = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_COUNT).getIntValue();
			setBargin(1,false);
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** RETRY COUNT ****** : " + retryCount);
			
			int maxtry = mySession.getVariableField(IProjectVariables.DYNAMIC_MENU_VAR,IProjectVariables.DYNAMIC_MENU_VAR_FIELD_RETRY).getIntValue();
			
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** MAXTRY COUNT ****** : " + maxtry);
			
			int phraseVarCounter = 0;
			
			phraseVarCounter = (phraseVarCounter+1);
			
			String prompt_variable = GlobalConstant.VAR_COMPLEX_PHRASEVAR+GlobalConstant.SEPARATOR_COLON+GlobalConstant.VAR_COMPLEX_PHRASEVAR_FIELD+(phraseVarCounter);

			String preferred_lang = mySession.getVariableField("ApplicationVariable", "Language").getStringValue();
			HashMap<String,String>  App_Prop = new HashMap<String, String>();
			App_Prop = (HashMap<String, String>) mySession.getVariableField("HashMap", "PropertyValue").getObjectValue();
			String sudioPath = App_Prop.get("AudioLocation").toString();
			
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG,"Preferred Language : "+preferred_lang);
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG,"Audio Location : "+sudioPath);

			String retry_event = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue();

			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** retry_event No Input ****** : " + retry_event);
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** retry_event No Match ****** : " + mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getStringValue());
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** retry_event No Input ****** : " + mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue());
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, " ***** retry_event Max try ****** : " + mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_MAXTRY).getStringValue());
			
			
			if(retryCount < maxtry)
			{
				
				if("1".equals(retry_event))
				{
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** NOINPUT *********");
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** Call log no input count *********" + 
					mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue());

					
					if(mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue().equals(""))
					{
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).setValue(1);

					}
					else
					{
						int noinputcount = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getIntValue();
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).setValue(noinputcount+1);
					}
					
					String[] noinput_prompt_variable = mySession.getVariableField(IProjectVariables.DYNAMIC_MENU_VAR,IProjectVariables.DYNAMIC_MENU_VAR_FIELD_NO_INPUT).getStringValue().split(GlobalConstant.SEPARATOR_COLON);
					//mySession.getVariableField(IProjectVariables.PHRASEVAR,IProjectVariables.PH_1).setValue("NO_INPUT_001");
					String prmpt_retry = sudioPath+preferred_lang+GlobalConstant.SEPARATOR_FORWARD_SLASH+noinput_prompt_variable[retryCount-1]+GlobalConstant.EXTENSION_WAVE;
		            mySession.getVariableField(IProjectVariables.PHRASEVAR,GlobalConstant.VAR_COMPLEX_PHRASEVAR_FIELD+(phraseVarCounter)).setValue(prmpt_retry);
		            
		            mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG,"Playing the prompt "+prmpt_retry);
		            if(!(GlobalConstant.NA.equalsIgnoreCase(noinput_prompt_variable[retryCount-1])))
		            {
		            	add(1, new com.avaya.sce.runtime.PhraseVariableElement(prompt_variable,com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL,false));
		            	
		            }
		            
				}
				else
				{
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** NOMATCH *********");
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** Call log no match count *********" +
					mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getStringValue());

					
					if(mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getStringValue().equals(""))
					{
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).setValue(1);

					}
					else
					{
						int noinputcount = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getIntValue();
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).setValue(noinputcount+1);
					}
					
					String[] noinput_prompt_variable = mySession.getVariableField(IProjectVariables.DYNAMIC_MENU_VAR,IProjectVariables.DYNAMIC_MENU_VAR_FIELD_NO_MATCH).getStringValue().split(GlobalConstant.SEPARATOR_COLON);
					String prmpt_retry = sudioPath+preferred_lang+GlobalConstant.SEPARATOR_FORWARD_SLASH+noinput_prompt_variable[retryCount-1]+GlobalConstant.EXTENSION_WAVE;
					mySession.getVariableField(IProjectVariables.PHRASEVAR,GlobalConstant.VAR_COMPLEX_PHRASEVAR_FIELD+(phraseVarCounter)).setValue(prmpt_retry);
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** No Match Prompt Variable  : *********"+prmpt_retry);
					 if(!(GlobalConstant.NA.equalsIgnoreCase(noinput_prompt_variable[retryCount-1])))
			         {
			           	add(1, new com.avaya.sce.runtime.PhraseVariableElement(prompt_variable,com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL,false));
			           	mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG,"Playing the prompt " +prmpt_retry);
			         }			
				}
			}
			else
			{
				String maxtry_prompt =mySession.getVariableField(IProjectVariables.DYNAMIC_MENU_VAR,IProjectVariables.DYNAMIC_MENU_VAR_FIELD_MAXTRIES).getStringValue();
				String prmpt_retry = sudioPath+preferred_lang+GlobalConstant.SEPARATOR_FORWARD_SLASH+maxtry_prompt+GlobalConstant.EXTENSION_WAVE;
	         mySession.getVariableField(IProjectVariables.PHRASEVAR,GlobalConstant.VAR_COMPLEX_PHRASEVAR_FIELD+(phraseVarCounter)).setValue(prmpt_retry);
	        
	         if(!(GlobalConstant.NA.equalsIgnoreCase(maxtry_prompt)))
	         {
	         	add(1, new com.avaya.sce.runtime.PhraseVariableElement(prompt_variable,com.avaya.sce.runtime.PhraseVariableElement.Type.AUDIO_URL,false));
	         	mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG,"Playing the prompt "+prompt_variable);
	         }	
	         
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "******* TRIES EXCEEDED ********");
				
				//Call log noinput and nomatch
				if("1".equals(retry_event))
				{
	             mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** Call log no input count *********" + 
				mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue());
					
					if(mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getStringValue().equals(""))
					{
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).setValue(1);

					}
					else
					{
						int noinputcount = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).getIntValue();
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOINPUT).setValue(noinputcount+1);
					}
				}
				else
				{
	             mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "****** Call log no match count *********" + 
				mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getStringValue());
					
					if(mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getStringValue().equals(""))
					{
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).setValue(1);

					}
					else
					{
						int noinputcount = mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).getIntValue();
						mySession.getVariableField(IProjectVariables.RETRY,IProjectVariables.RETRY_FIELD_NOMATCH).setValue(noinputcount+1);
					}
				}
				
			}
			}
			catch(java.lang.Exception ex)
			{
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_FATAL, "Exception "+GetStackTrace.getMessage(ex));
			}
		super.updatePrompt(mySession);
	}
	/**
	 * This method is generated automatically and should not be manually edited
	 * To manually edit the prompt, override:
	 * void updatePrompt()
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:23:36 AM
	 */
	public void buildPrompt(){
		com.avaya.sce.runtime.Format format = null;
		com.avaya.sce.runtime.RenderHint hint = null;
		com.avaya.sce.runtime.MediaPage mediaPage = null;
		setBarginType(com.avaya.sce.runtimecommon.SCERT.BARGIN_SPEECH);
		setName("playNINM");
		setOrder(com.avaya.sce.runtime.Prompt.STANDARD);

		// Prompt level 1
		setTimeout(1,8000);
		setBargin(1,true);

	}

}
