package flow.subflow.vbstatus;

import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;

import com.General.ApiCallFromExtJar;
import com.General.Load;
import com.General.LoadApplicationProperties;
import com.avaya.sce.runtime.tracking.TraceInfo;
import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.util.GetStackTrace;
import com.util.GlobalConstant;
import com.util.Nuance.VBHist;

import flow.IProjectVariables;

/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2024-JAN-02  05:04:39 PM
 */
public class CHECKVBSTATUS extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2024-JAN-02  05:04:39 PM
	 */
	public CHECKVBSTATUS() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:23:43 AM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = null;
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:23:43 AM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:23:43 AM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(1);
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "vbstatus", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "EN", false).setDebugId(32)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("vbstatus-Verify", "verify").setDebugId(33));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		} else {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("vbstatus-callmethod", "NotVerify").setDebugId(35));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;
		}


		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
	
	@Override
	public void requestBegin(SCESession mySession) {

		ApiCallFromExtJar api = new ApiCallFromExtJar();
		String ident_type = mySession.getVariableField("ident_type")!=null ? mySession.getVariableField("ident_type").getStringValue():null;
		try {
			
			HashMap<String, Object> jsonRespose = null;
			ident_type = mySession.getVariableField("ident_type")!=null ? mySession.getVariableField("ident_type").getStringValue():null;
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"identified type is "+ident_type,mySession);
			if(ident_type==null) {
					TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"ident_type is null",mySession);
					if(mySession.getVariableField("WS_IdentifyCustomerDetails","FfpResponseMap").getObjectValue()!=null ) {
						jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","FfpResponseMap").getObjectValue();
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is set to FfpResponseMap "+ident_type,mySession);
					}
					else if(mySession.getVariableField("WS_IdentifyCustomerDetails","MobileResponseMap").getObjectValue()!=null){
						jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","MobileResponseMap").getObjectValue();
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is set to MobileResponseMap "+ident_type,mySession);
					}else {
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is null",mySession);	
					}
			}
			else if("FFP".equalsIgnoreCase(ident_type)) {
				 jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","FfpResponseMap").getObjectValue();
			}else if("MOBILE".equalsIgnoreCase(ident_type))
			{
				jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","MobileResponseMap").getObjectValue();
			}else {
				TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"ident_type is not FFP or MOBILE ",mySession);
				if(mySession.getVariableField("WS_IdentifyCustomerDetails","FfpResponseMap").getObjectValue()!=null ) {
					jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","FfpResponseMap").getObjectValue();
					TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is set to FfpResponseMap "+ident_type,mySession);
				}
				else if(mySession.getVariableField("WS_IdentifyCustomerDetails","MobileResponseMap").getObjectValue()!=null){
					jsonRespose = (HashMap<String, Object>) mySession.getVariableField("WS_IdentifyCustomerDetails","MobileResponseMap").getObjectValue();
					TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is set to MobileResponseMap "+ident_type,mySession);
				}else {
					TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"jsonRespose is null",mySession);	
				}
			}
			
			
			if(jsonRespose!=null) {
					TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "jsonResposeMap : "+jsonRespose.toString(),mySession);
					HashMap<String, Object> jsonResposeMap = (HashMap<String, Object>) jsonRespose.get("Response");
				
					
					if(jsonResposeMap != null) {
						
						
						HashMap<String,String>  App_Prop = new HashMap<String, String>();
						App_Prop = (HashMap<String, String>) mySession.getVariableField("HashMap", "PropertyValue").getObjectValue();
						mySession.getVariableField(IProjectVariables.DATEFORMAT).setValue(App_Prop.get("dateformat"));
						
								mySession.getVariableField(IProjectVariables.VBSTATUS).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.VB_STATUS, mySession));
								mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.VB_STATUSDATE, mySession));
							
							
						
						mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "VB STATUS OBTIANED : "+mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue());
						mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "VB STATUS DATE OBTIANED : "+mySession.getVariableField(IProjectVariables.VBSTATUSDATE).getStringValue());
								
						mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.CountryCode, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.Email, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.FFPNumber, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.MemberTier, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.PhoneNumber, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.MemberTier, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_NAME).setValue(api.parseJsonResponse(jsonRespose,GlobalConstant.FirstName, mySession));
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_DO_B).setValue(api.parseJsonResponse(jsonRespose,"DoB", mySession));
				        			
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " COUNTRY CODE : "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " EMAIL :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " FFP NUMBER :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " MEMBER TIER  : "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " MOBILE :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " SEGMENT :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " NAME :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_NAME).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " DoB :  "+mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_DO_B).getStringValue() , mySession);
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " VBSTATUS "+mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue() , mySession);
						
					} else {
						TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " response not obtained ot null response so vb status and vb status date is set as NA " , mySession);
						mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
						mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
						mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT).setValue("NA");
				        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_DO_B).setValue("NA");
				        
						mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
						mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
					}
			}else {
				TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "jsonRespose is null so vb status and vb status date is set as NA: ",mySession);
				mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
				mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
				mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE).setValue("NA");
		        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).setValue("NA");
		        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).setValue("NA");
		        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue("NA");
		        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE).setValue("NA");
		        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT).setValue("NA");
		        
				mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
				mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
			}
			

			
			
		} catch (java.lang.Exception ex) {
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_FATAL, "Exception "+com.util.GetStackTrace.getMessage(ex));
			mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
			mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
			mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE).setValue("NA");
	        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).setValue("NA");
	        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).setValue("NA");
	        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue("NA");
	        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE).setValue("NA");
	        mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT).setValue("NA");
	        
			mySession.getVariableField(IProjectVariables.VBSTATUS).setValue("NA");
			mySession.getVariableField(IProjectVariables.VBSTATUSDATE).setValue("NA");
		}
		
		
		HashMap<String,String> customerDetails = new HashMap<String,String>();
		customerDetails.put("ELG","NA");
		
		customerDetails = (HashMap<String, String>) mySession.getVariableField("HashMap", "customerDetails").getObjectValue();
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "customerDetails from IVR at the start of vbsstatus check : "+customerDetails.toString(),mySession);
		customerDetails.put("VB_Status",mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue());
		customerDetails.put("VB_Status_Date",mySession.getVariableField(IProjectVariables.VBSTATUSDATE).getStringValue());
		
		String CustTier = mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue();
		if(! CustTier.equalsIgnoreCase("NA")) {
			CustTier = LoadApplicationProperties.getProperty(CustTier, mySession);
			mySession.getVariableField("CustTier").setValue(CustTier);
			
			mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue(CustTier);
			mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).setValue(CustTier);
			
			mySession.getVariableField("CustTier").setValue(mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue());
			customerDetails.put("MemberTier", mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue());
		}
		else {
			mySession.getVariableField("CustTier").setValue(mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue());
			customerDetails.put("MemberTier", mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue());
		}
		customerDetails.put("Email",mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL).getStringValue());
		customerDetails.put("DoB",mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_DO_B).getStringValue());
		
		
		VBHist vbhistory = new VBHist();
		vbhistory.setDT_STATUS_UPDATE_DATE(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()).toString());
	 		vbhistory.setVC_CHANNEL("VOICE");
	 		vbhistory.setVC_WORK_REQUEST_ID("");//obtained from agent
		//default values
		vbhistory.setVC_DE_ENROLL_REASON(GlobalConstant.NA);
		vbhistory.setVC_DE_ENROLLED_AGENT_ID(GlobalConstant.NA);
		vbhistory.setVC_DE_ENROLLED_AGENT_ROLE(GlobalConstant.NA);
		
		vbhistory.setVC_FFP_NUMBER(mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER).getStringValue());
		vbhistory.setVC_IDENTIFY_TYPE(ident_type);
		vbhistory.setVC_SEGMENT(mySession.getVariableField(IProjectVariables.CUSTOMERDETAILS,IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER).getStringValue());
		vbhistory.setVC_STATUS(GlobalConstant.YES);
		vbhistory.setVC_UCID(mySession.getVariableField("session", "ucid").getStringValue());
		
		vbhistory.setVC_TRANSFERRED_BY_AGENT_ID(mySession.getVariableField(IProjectVariables.VC__TRANSFERRED__BY__AGENT__ID).getStringValue());//obtained from agent
		vbhistory.setVC_TRANSFERRED_BY_AGENT_ROLE(mySession.getVariableField(IProjectVariables.VC__TRANSFERRED__BY__AGENT__ROLE).getStringValue());//obtained from agent
		
		
		
		
		if("DE".equalsIgnoreCase(mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue()) || "RJ".equalsIgnoreCase(mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue()))
		{
			checkeligibility(mySession);
			if(GlobalConstant.ELIGIBILESHORTCODE.equalsIgnoreCase(mySession.getVariableField(IProjectVariables.VBSTATUSCODE).getStringValue())){
				//eligible
				vbhistory.setVC_VB_REASON("ELIGIBLE");
				vbhistory.setVC_FUNCTION_NAME("ELIGIBLE_CHECK");
			}else {
				//not eligible
				vbhistory.setVC_VB_REASON("NOT_ELIGIBLE");
				vbhistory.setVC_FUNCTION_NAME("ELIGIBLE_CHECK");
			}
		}
		else if("EL".equalsIgnoreCase(mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue())){
			//eligible
			vbhistory.setVC_VB_REASON("ELIGIBLE");
			vbhistory.setVC_FUNCTION_NAME("ELIGIBLE_CHECK");
		}else {
			//not eligible
			vbhistory.setVC_VB_REASON("NOT_ELIGIBLE");
			vbhistory.setVC_FUNCTION_NAME("ELIGIBLE_CHECK");
		}
		
		mySession.setProperty("vbmap", vbhistory);
		
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_DEBUG, "input sent from IVR : "+mySession.getProperty("vbmap").toString(),mySession);
		
		customerDetails.put("ELG",vbhistory.getVC_VB_REASON());
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_DEBUG, "customerDetails set after CHECKVBSTATUS : "+customerDetails.toString(),mySession);
		Load load = new Load();
		String method = "VBHistory";
		load.values(method, mySession);
		
		super.requestBegin(mySession);
	
	
	}
	
	
	void checkeligibility(SCESession mySession) {
		String input = "";
		String dayscount ="";
		try
		{
		
			try
			{
			
			String vbStatus  = mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue();
			String DAYS = "";
			String DATE = mySession.getVariableField(IProjectVariables.VBSTATUSDATE).getStringValue();
			if("DE".equalsIgnoreCase(vbStatus)) {
				DAYS = mySession.getVariableField(IProjectVariables.DEENROLLDAYS).getStringValue();
			}else if("RJ".equalsIgnoreCase(vbStatus)) {
				DAYS = mySession.getVariableField(IProjectVariables.REJECTDAYS).getStringValue();
			}
				
				//deenroll(VB_DEENROLL_DATE, VB_DEENROLL_DAYS,mySession);
				
				//call the function
				input = DATE;
				dayscount = DAYS;
				TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " called eligibility check " , mySession);
			
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " STATUS:  "+mySession.getVariableField(IProjectVariables.VBSTATUS).getStringValue() , mySession);
			}
			catch(Exception e) {
				mySession.getVariableField(IProjectVariables.VBSTATUSCODE).setValue(GlobalConstant.FAILURESHORTCODE);
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_ERROR, "!!!!!!Exception :::" + GetStackTrace.getMessage(e));
			}	
			
		HashMap<String,String>  App_Prop = new HashMap<String, String>();
		App_Prop = (HashMap<String, String>) mySession.getVariableField("HashMap", "PropertyValue").getObjectValue();
		mySession.getVariableField(IProjectVariables.DATEFORMAT).setValue(App_Prop.get("dateformat"));			
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, " date : "+input+" daysocunt : "+dayscount ,mySession);
		int days = Integer.parseInt(dayscount);
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern(mySession.getVariableField(IProjectVariables.DATEFORMAT).getStringValue());
		LocalDateTime customerTime = LocalDateTime.parse(input, formatter);
		LocalDateTime eligibleTime = customerTime.toLocalDate().plusDays(days).atStartOfDay();
		LocalDateTime currentTime = LocalDateTime.now();
		Duration duration = Duration.between(currentTime, eligibleTime);
		long daysDifference = duration.toDays();
		long hoursDifference = duration.toHours() % 24;
		long minutes = duration.toMinutes() % 60;
		long seconds = duration.getSeconds() % 60;
		if (daysDifference > 0) {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Not eligible yet.",mySession);
		} else if (hoursDifference > 0) {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Not eligible yet.",mySession);
		} else if (minutes > 0) {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Not eligible yet.",mySession);
		} else if (seconds > 0) {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Not eligible yet.",mySession);
		} else {
		if (currentTime.isAfter(eligibleTime)) {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Eligible.",mySession);
			mySession.setProperty("DEELG", "YES");
			mySession.getVariableField(IProjectVariables.VBSTATUSCODE).setValue(GlobalConstant.ELIGIBILESHORTCODE);
		} else {
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Not eligible yet.",mySession);
		}
		}
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Days difference: " + daysDifference,mySession);
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "Hours difference: " + hoursDifference,mySession);
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "minutes difference: " + minutes,mySession);
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO, "seconds difference: " + seconds,mySession);
		}
		catch(Exception e) {
			mySession.getVariableField(IProjectVariables.VBSTATUSCODE).setValue(GlobalConstant.FAILURESHORTCODE);
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_ERROR, "!!!!!!Exception :::" + GetStackTrace.getMessage(e));
		}
	}


}
