package flow;

/**
 * This is a special reserved class that is repsonsible for loading application 
 * variables as well as the forward to the actual first form of the application.<br>
 * This class should not be manually edited as changes may be overridden by the 
 * code generator.<br>
 * Last generated by Orchestration Designer at: 2021-JUN-06  03:33:18 PM
 */
public class Start extends com.avaya.sce.runtime.Entry {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2021-JUN-06  03:33:18 PM
	 */
	public Start() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method is generated automatically.  Any changes may be overwritten.
	 * Returns the submit object that will redirect application flow to the first
	 * form in the application.  This also adds various standard variables to the
	 * list of data to be submitted to the runtime variable table.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 * @return the Submit object that contains the standard variables and the first form
	 */
	public com.avaya.sce.runtime.Submit getSubmit(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Submit submit = new com.avaya.sce.runtime.Submit("LoadInitValues");
		return ( submit );
	}
	/**
	 * This method initializes the SCE session with the variables that
	 * are defined in the application.<BR>
	 * 
	 * This method is generated automatically and should not be manually
	 * edited because changes may be overwritten by future code 
	 * generation.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public void initializeVariables(com.avaya.sce.runtimecommon.SCESession session) {
		com.avaya.sce.runtimecommon.IVariable variable = null;
		String[] variableFields = null;

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.RESPONSE_CODE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DYNAMIC_PC_FIELD_CONFIDENCE,
			IProjectVariables.DYNAMIC_PC_FIELD_INPUTMODE,
			IProjectVariables.DYNAMIC_PC_FIELD_INTERPRETATION,
			IProjectVariables.DYNAMIC_PC_FIELD_NOINPUTCOUNT,
			IProjectVariables.DYNAMIC_PC_FIELD_NOMATCHCOUNT,
			IProjectVariables.DYNAMIC_PC_FIELD_UTTERANCE,
			IProjectVariables.DYNAMIC_PC_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DYNAMIC_PC, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.CONNECTBACK, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.METHOD, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.PHRASEVAR_FIELD_PH_1,
			IProjectVariables.PHRASEVAR_FIELD_PH_2,
			IProjectVariables.PHRASEVAR_FIELD_PH_3,
			IProjectVariables.PHRASEVAR_FIELD_PH_4,
			IProjectVariables.PHRASEVAR_FIELD_PH_5,
			IProjectVariables.PHRASEVAR_FIELD_PH_6,
			IProjectVariables.PHRASEVAR_FIELD_PH_7,
			IProjectVariables.PHRASEVAR_FIELD_PH_8 };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.PHRASEVAR, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.REDIRECTINFO_FIELD_PRESENTATIONINFO,
			IProjectVariables.REDIRECTINFO_FIELD_REASON,
			IProjectVariables.REDIRECTINFO_FIELD_SCREENINGINFO,
			IProjectVariables.REDIRECTINFO_FIELD_URI };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.REDIRECTINFO, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.IS_PROPERTY_FILE_MODIFIED, "false", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.IS_VBHISTORY_INSERTED, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.CONTEXT_FIELD_CONTEXT_ID,
			IProjectVariables.CONTEXT_FIELD_INTENT,
			IProjectVariables.CONTEXT_FIELD_SERVICE__LOB,
			IProjectVariables.CONTEXT_FIELD_SERVICE_MAP,
			IProjectVariables.CONTEXT_FIELD_TRF };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.CONTEXT, variableFields, new String[] {"NA", "", "", "", ""}, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.IS_ENABLED, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.CONSENT_MENU_FIELD_CONFIDENCE,
			IProjectVariables.CONSENT_MENU_FIELD_INPUTMODE,
			IProjectVariables.CONSENT_MENU_FIELD_INTERPRETATION,
			IProjectVariables.CONSENT_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.CONSENT_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.CONSENT_MENU_FIELD_UTTERANCE,
			IProjectVariables.CONSENT_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.CONSENT_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VBSTATUSDATE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_CONFIDENCE,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_DURATION,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_MAXTIME,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_SIZE,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_TERMCHAR,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_UTTERANCE,
			IProjectVariables.AUTHENTICATE_VOICE_PC_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.AUTHENTICATE_VOICE_PC, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.POST__CALIBRATION, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.CHECK_CONTEXT, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VC__TRANSFERRED__BY__AGENT__ROLE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.START_SESSION_WS_FIELD_EXCEPTION,
			IProjectVariables.START_SESSION_WS_FIELD_SESSION_ID };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.START_SESSION_WS, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VBSTATUSCODE, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.CUSTOMERDETAILS_FIELD_COUNTRYCODE,
			IProjectVariables.CUSTOMERDETAILS_FIELD_DO_B,
			IProjectVariables.CUSTOMERDETAILS_FIELD_EMAIL,
			IProjectVariables.CUSTOMERDETAILS_FIELD_FFPNUMBER,
			IProjectVariables.CUSTOMERDETAILS_FIELD_MEMBERTIER,
			IProjectVariables.CUSTOMERDETAILS_FIELD_MOBILE,
			IProjectVariables.CUSTOMERDETAILS_FIELD_NAME,
			IProjectVariables.CUSTOMERDETAILS_FIELD_SEGMENT };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.CUSTOMERDETAILS, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SESSION_FIELD_AAI,
			IProjectVariables.SESSION_FIELD_ANI,
			IProjectVariables.SESSION_FIELD_CALLTAG,
			IProjectVariables.SESSION_FIELD_CHANNEL,
			IProjectVariables.SESSION_FIELD_CHANNELTYPE,
			IProjectVariables.SESSION_FIELD_CONVERSEFIRST,
			IProjectVariables.SESSION_FIELD_CONVERSESECOND,
			IProjectVariables.SESSION_FIELD_CURRENTLANGUAGE,
			IProjectVariables.SESSION_FIELD_DNIS,
			IProjectVariables.SESSION_FIELD_EXIT_CUSTOMER_ID,
			IProjectVariables.SESSION_FIELD_EXIT_INFO_1,
			IProjectVariables.SESSION_FIELD_EXIT_INFO_2,
			IProjectVariables.SESSION_FIELD_EXIT_PARENT_ID,
			IProjectVariables.SESSION_FIELD_EXIT_PREFERRED_PATH,
			IProjectVariables.SESSION_FIELD_EXIT_REASON,
			IProjectVariables.SESSION_FIELD_EXIT_TOPIC,
			IProjectVariables.SESSION_FIELD_LASTERROR,
			IProjectVariables.SESSION_FIELD_MEDIATYPE,
			IProjectVariables.SESSION_FIELD_PROTOCOLNAME,
			IProjectVariables.SESSION_FIELD_PROTOCOLVERSION,
			IProjectVariables.SESSION_FIELD_SESSIONID,
			IProjectVariables.SESSION_FIELD_SESSIONLABEL,
			IProjectVariables.SESSION_FIELD_SHAREDMODE,
			IProjectVariables.SESSION_FIELD_UCID,
			IProjectVariables.SESSION_FIELD_UUI,
			IProjectVariables.SESSION_FIELD_VIDEOBITRATE,
			IProjectVariables.SESSION_FIELD_VIDEOCODEC,
			IProjectVariables.SESSION_FIELD_VIDEOENABLED,
			IProjectVariables.SESSION_FIELD_VIDEOFARFMTP,
			IProjectVariables.SESSION_FIELD_VIDEOFORMAT,
			IProjectVariables.SESSION_FIELD_VIDEOFPS,
			IProjectVariables.SESSION_FIELD_VIDEOHEIGHT,
			IProjectVariables.SESSION_FIELD_VIDEONEARFMTP,
			IProjectVariables.SESSION_FIELD_VIDEOWIDTH,
			IProjectVariables.SESSION_FIELD_VPCALLEDEXTENSION,
			IProjectVariables.SESSION_FIELD_VPCONVERSEONDATA,
			IProjectVariables.SESSION_FIELD_VPCOVERAGEREASON,
			IProjectVariables.SESSION_FIELD_VPCOVERAGETYPE,
			IProjectVariables.SESSION_FIELD_VPRDNIS,
			IProjectVariables.SESSION_FIELD_VPREPORTURL };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SESSION, variableFields, null, session, false, true );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.CONTEXTID, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ERROR_COUNT, "0", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.TIMEOUT, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.TRANSFER_VDN, "NA", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.RETRY_FIELD_ACC__CONFIRM__RETRY,
			IProjectVariables.RETRY_FIELD_ACC__NOT__MATCH__RETRY,
			IProjectVariables.RETRY_FIELD_AST__COUNT,
			IProjectVariables.RETRY_FIELD_CALL_LOG__NO_INPUT_COUNT,
			IProjectVariables.RETRY_FIELD_CALL_LOG__NO_MATCH_COUNT,
			IProjectVariables.RETRY_FIELD_CC__NOT__MATCH__RETRY,
			IProjectVariables.RETRY_FIELD_COUNT,
			IProjectVariables.RETRY_FIELD_CVV__NM__RETRY,
			IProjectVariables.RETRY_FIELD_ENROLLCOUNT,
			IProjectVariables.RETRY_FIELD_MAXTRY,
			IProjectVariables.RETRY_FIELD_MAXTRY__AST,
			IProjectVariables.RETRY_FIELD_MAXTRY__MISMATCH,
			IProjectVariables.RETRY_FIELD_MAXTRYPROMPT,
			IProjectVariables.RETRY_FIELD_MISMATCH__COUNT,
			IProjectVariables.RETRY_FIELD_MSG__RETRY,
			IProjectVariables.RETRY_FIELD_NOINPUT,
			IProjectVariables.RETRY_FIELD_NOINPUTPROMPT,
			IProjectVariables.RETRY_FIELD_NOMATCH,
			IProjectVariables.RETRY_FIELD_NOMATCHPROMPT,
			IProjectVariables.RETRY_FIELD_PAYMENT__INVALID__RETRY,
			IProjectVariables.RETRY_FIELD_POINT,
			IProjectVariables.RETRY_FIELD_REPEAT__COUNT,
			IProjectVariables.RETRY_FIELD_RETRY_EVENT,
			IProjectVariables.RETRY_FIELD_RL__NINM__COUNT,
			IProjectVariables.RETRY_FIELD_TRANS__PIN__COUNT,
			IProjectVariables.RETRY_FIELD_VERIFYCOUNT };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.RETRY, variableFields, new String[] {"1", "1", "1", "", "", "1", "1", "1", "3", "3", "3", "4", "", "1", "1", "0", "", "0", "", "1", "1", "1", "", "1", "1", "1"}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_CONFIDENCE,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_DURATION,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_MAXTIME,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_SIZE,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_TERMCHAR,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_UTTERANCE,
			IProjectVariables.AUTHENTICATE_VOICE_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.AUTHENTICATE_VOICE, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SET_APPLICATION_STATUS_WS_FIELD_EXPECTION,
			IProjectVariables.SET_APPLICATION_STATUS_WS_FIELD_UNTITLED_1,
			IProjectVariables.SET_APPLICATION_STATUS_WS_FIELD_UNTITLED_2 };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SET_APPLICATION_STATUS_WS, variableFields, new String[] {"false", "", ""}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_ERRORCODE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_MESSAGE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_OBJECT,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_STACKTRACE,
			IProjectVariables.DD_LAST_EXCEPTION_FIELD_TYPE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DD_LAST_EXCEPTION, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.EXIT_MENU_FIELD_CONFIDENCE,
			IProjectVariables.EXIT_MENU_FIELD_INPUTMODE,
			IProjectVariables.EXIT_MENU_FIELD_INTERPRETATION,
			IProjectVariables.EXIT_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.EXIT_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.EXIT_MENU_FIELD_UTTERANCE,
			IProjectVariables.EXIT_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.EXIT_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VC__TRANSFERRED__BY__AGENT__ID, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.TIME_FIELD_AUDIO,
			IProjectVariables.TIME_FIELD_HOUR,
			IProjectVariables.TIME_FIELD_MILLISECOND,
			IProjectVariables.TIME_FIELD_MINUTE,
			IProjectVariables.TIME_FIELD_SECOND,
			IProjectVariables.TIME_FIELD_TIMEZONE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.TIME, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.DATEFORMAT, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SHAREDUUI_FIELD_ID,
			IProjectVariables.SHAREDUUI_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SHAREDUUI, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ENROLLFAILED, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ENROLLMENT_STATUS, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.PREPARED_UUI, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VBSTATUS, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.VB_CONTEXT_STORE_FIELD_TRF,
			IProjectVariables.VB_CONTEXT_STORE_FIELD_VB_ASSISTED,
			IProjectVariables.VB_CONTEXT_STORE_FIELD_VB_STATUS,
			IProjectVariables.VB_CONTEXT_STORE_FIELD_VOICE_ID,
			IProjectVariables.VB_CONTEXT_STORE_FIELD_VOICE_INDICATOR_STATUS };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.VB_CONTEXT_STORE, variableFields, new String[] {"NA", "", "NA", "NA", "NA"}, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.REJECTDAYS, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.NUANCEMETHOD, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_AUDIO_LOCATION,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_BARGEIN,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_GRAMMARS,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_LANGUAGE,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_MAXTRIES,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_MAX_TRIES_NEXT_NODE,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_NEXT_NODE,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_NO_INPUT,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_NO_MATCH,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_PROMPTS,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_RETRY,
			IProjectVariables.DYNAMIC_MENU_VAR_FIELD_TIME_OUT };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DYNAMIC_MENU_VAR, variableFields, new String[] {"", "", "", "", "MAXTRICE", "", "", "NO_INPUT:NO_INPUT", "NO_MATCH:NO_MATCH", "", "3", ""}, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ENROLLMAXTRIES, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.BLIND_TRANSFER, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENROLL_WS_FIELD_AUDIO_OKCOUNT,
			IProjectVariables.ENROLL_WS_FIELD_AUDIO_SEGMENT_ID,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_COUNT,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_NO_INPUT_COUNT,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_RETRY_MENU_COUNT,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_STATUS,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_VOICE_WAV_FILE_NAME,
			IProjectVariables.ENROLL_WS_FIELD_ENROLL_WRONG_PHRASE_COUNT,
			IProjectVariables.ENROLL_WS_FIELD_EXCEPTION,
			IProjectVariables.ENROLL_WS_FIELD_IS_MAX_TRIES_EXCEEDED,
			IProjectVariables.ENROLL_WS_FIELD_IS_SEGMENT_VALID,
			IProjectVariables.ENROLL_WS_FIELD_PLAY_PHRASE_FILE,
			IProjectVariables.ENROLL_WS_FIELD_REASON,
			IProjectVariables.ENROLL_WS_FIELD_REQUEST_ID,
			IProjectVariables.ENROLL_WS_FIELD_RETRY_FLAG_ENABLED };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENROLL_WS, variableFields, new String[] {"0", "", "1", "1", "1", "", "NA", "1", "", "false", "", "0", "", "", "0"}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.TRAIN_WS_FIELD_EXCEPTION,
			IProjectVariables.TRAIN_WS_FIELD_TRAIN_STATUS };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.TRAIN_WS, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VERIFY, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.NUANCE_SERVER_STATE_FIELD_IS_NUANCE_REACHABLE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.NUANCE_SERVER_STATE, variableFields, new String[] {"false"}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENROLL_VOICE_PC_FIELD_CONFIDENCE,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_DURATION,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_MAXTIME,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_SIZE,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_TERMCHAR,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_UTTERANCE,
			IProjectVariables.ENROLL_VOICE_PC_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENROLL_VOICE_PC, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.VB_INPUTS_FIELD_AUDIO_PATH,
			IProjectVariables.VB_INPUTS_FIELD_CALL_FLOW_NAME,
			IProjectVariables.VB_INPUTS_FIELD_DB_CONTROLLER_OBJECT,
			IProjectVariables.VB_INPUTS_FIELD_IS_AGENT_DRIVEN_CALL,
			IProjectVariables.VB_INPUTS_FIELD_REL_ID,
			IProjectVariables.VB_INPUTS_FIELD_SEGMENT_CODE,
			IProjectVariables.VB_INPUTS_FIELD_URLTYPE,
			IProjectVariables.VB_INPUTS_FIELD_WS_URL };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.VB_INPUTS, variableFields, new String[] {"", "", "", "false", "", "", "", ""}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.AUTHENTICATE_WS_FIELD_AUDIO_SEGMENT_ID,
			IProjectVariables.AUTHENTICATE_WS_FIELD_AUTHENTICATE_COUNT,
			IProjectVariables.AUTHENTICATE_WS_FIELD_DECISION,
			IProjectVariables.AUTHENTICATE_WS_FIELD_DECISION_REASON,
			IProjectVariables.AUTHENTICATE_WS_FIELD_EXCEPTION,
			IProjectVariables.AUTHENTICATE_WS_FIELD_INCONCLUSIVE_COUNT,
			IProjectVariables.AUTHENTICATE_WS_FIELD_IS_LOCKED,
			IProjectVariables.AUTHENTICATE_WS_FIELD_IS_MATCH,
			IProjectVariables.AUTHENTICATE_WS_FIELD_IS_NOINPUT,
			IProjectVariables.AUTHENTICATE_WS_FIELD_IS_VOICE_MISMATCH,
			IProjectVariables.AUTHENTICATE_WS_FIELD_NO_INPUT_COUNT,
			IProjectVariables.AUTHENTICATE_WS_FIELD_REQUEST_ID,
			IProjectVariables.AUTHENTICATE_WS_FIELD_SPEAKER_ID };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.AUTHENTICATE_WS, variableFields, new String[] {"", "1", "", "", "", "0", "false", "false", "false", "false", "1", "", ""}, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DATE_FIELD_AUDIO,
			IProjectVariables.DATE_FIELD_DAYOFMONTH,
			IProjectVariables.DATE_FIELD_DAYOFWEEK,
			IProjectVariables.DATE_FIELD_DAYOFWEEKNUM,
			IProjectVariables.DATE_FIELD_DAYOFYEAR,
			IProjectVariables.DATE_FIELD_MONTH,
			IProjectVariables.DATE_FIELD_MONTHINYEAR,
			IProjectVariables.DATE_FIELD_YEAR };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DATE, variableFields, null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.HASH_MAP_FIELD_APP_PROPERTIES,
			IProjectVariables.HASH_MAP_FIELD_CALL_HISTORY,
			IProjectVariables.HASH_MAP_FIELD_CUSTOMER_DETAILS,
			IProjectVariables.HASH_MAP_FIELD_FLOW,
			IProjectVariables.HASH_MAP_FIELD_INITIAL_NODE,
			IProjectVariables.HASH_MAP_FIELD_LANGUAGE,
			IProjectVariables.HASH_MAP_FIELD_LINE_TYPE,
			IProjectVariables.HASH_MAP_FIELD_MENU_HISTORY,
			IProjectVariables.HASH_MAP_FIELD_NODE,
			IProjectVariables.HASH_MAP_FIELD_PROPERTY_VALUE,
			IProjectVariables.HASH_MAP_FIELD_TRANSACTION_HISTORY };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.HASH_MAP, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.IS_EXTENSION_TRANSFER, "false", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.UUI, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.SERVICEMAP_FIELD_CHANNEL,
			IProjectVariables.SERVICEMAP_FIELD_LANGUAGE,
			IProjectVariables.SERVICEMAP_FIELD_LOCATION,
			IProjectVariables.SERVICEMAP_FIELD_SERVICETYPE,
			IProjectVariables.SERVICEMAP_FIELD_TIER };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.SERVICEMAP, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.DEENROLLDAYS, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VBREASON, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VBSELFSERVE, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.VC__WORK__REQUEST__ID, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.PROPERTY_FILE_LOCATION, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ENROLLREJECT, "", null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.IS_CALL_HISTORY_INSERTED, "false", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.DYNAMIC_MENU_FIELD_CONFIDENCE,
			IProjectVariables.DYNAMIC_MENU_FIELD_INPUTMODE,
			IProjectVariables.DYNAMIC_MENU_FIELD_INTERPRETATION,
			IProjectVariables.DYNAMIC_MENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.DYNAMIC_MENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.DYNAMIC_MENU_FIELD_UTTERANCE,
			IProjectVariables.DYNAMIC_MENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.DYNAMIC_MENU, variableFields, null, session, false, false );
		session.putVariable(variable);

		variable = com.avaya.sce.runtime.SimpleVariable.createSimpleVariable(IProjectVariables.ERROR, "", null, session, false, false );
		session.putVariable(variable);

		variableFields = new String[] {
			IProjectVariables.ENROLLMENU_FIELD_CONFIDENCE,
			IProjectVariables.ENROLLMENU_FIELD_INPUTMODE,
			IProjectVariables.ENROLLMENU_FIELD_INTERPRETATION,
			IProjectVariables.ENROLLMENU_FIELD_NOINPUTCOUNT,
			IProjectVariables.ENROLLMENU_FIELD_NOMATCHCOUNT,
			IProjectVariables.ENROLLMENU_FIELD_UTTERANCE,
			IProjectVariables.ENROLLMENU_FIELD_VALUE };
		variable = com.avaya.sce.runtime.ComplexVariable.createComplexVariable(IProjectVariables.ENROLLMENU, variableFields, null, session, false, false );
		session.putVariable(variable);
	}
	/**
	 * This method returns the name of the application.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public String getEntryName() {
		return("QatarIVR_UAT");
	}
	/**
	 * This method returns a list of life cycle classes for Pluggable Connectors.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public java.util.Collection getPluggableLifeCycle() {
		java.util.ArrayList result = new java.util.ArrayList();
		return(result);
	}
	/**
	 * This method returns a list of VXML contributor classes for Pluggable Connectors.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public java.util.Collection getPluggableVXMLContrib() {
		java.util.ArrayList result = new java.util.ArrayList();
		return(result);
	}
	/**
	 * This method returns the root document for the application.
	 * This method is generated automatically and should not be modified
	 * because changes may be overwritten by future code generation.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public String getRootDoc() {
		return("AppRoot");
	}
	/**
	 * This method returns a boolean to indicate if the approot node has a web page to show.
	 * This method is generated automatically and should not be modified
	 * because changes may be overwritten by future code generation.
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public boolean hasWebPage(com.avaya.sce.runtimecommon.SCESession mySession) {
		return false;
	}
	/**
	 * Builds the list of input parameters that are defined for this application 
	 * entry.  This list is built automatically by adding Input Parameter
	 * nodes to AppRoot in the call flow editor.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.
	 *
	 * @return a Collection of <code>java.lang.String</code> objects that
	 * are the names of parameters the application is expecting.
	 * If the AppRoot node does not have any input parameters, then 
	 * this returns an empty list
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public java.util.Collection getInputParams(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		list = new java.util.ArrayList();

		return list;
	}
	/**
	 * Builds the list of capture expression that are defined for this application 
	 * entry.  This list is built automatically by adding Capture Expression
	 * items to AppRoot in the call flow editor.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.
	 *
	 * @return a Collection of <code>CaptureExpression</code> objects that
	 * specify the ECMA script expression and the Orchestration Designer 
	 * session variable that will store the captured result.
	 * If the AppRoot node does not have any capture expression items, then 
	 * this returns an empty list
	 * Last generated by Orchestration Designer at: 2024-MAR-29  10:24:21 AM
	 */
	public java.util.Collection getCaptureExpressions(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		list = new java.util.ArrayList();

		return list;
	}
}
